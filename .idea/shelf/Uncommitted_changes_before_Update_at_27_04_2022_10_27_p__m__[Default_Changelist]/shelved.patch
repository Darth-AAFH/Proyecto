Index: app/src/main/java/com/example/wildtracker/ui/CreadorEjercicios.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.wildtracker.ui\r\n\r\nimport android.annotation.SuppressLint\r\nimport android.content.ContentValues\r\nimport android.content.Intent\r\nimport android.database.sqlite.SQLiteDatabase\r\nimport android.os.Bundle\r\nimport android.view.View\r\nimport android.widget.*\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport androidx.core.text.isDigitsOnly\r\nimport com.example.wildtracker.R\r\nimport com.google.firebase.firestore.FirebaseFirestore\r\n\r\nclass CreadorEjercicios : AppCompatActivity() {\r\n\r\n    var editTextNombre: EditText ?= null\r\n    @SuppressLint(\"UseSwitchCompatOrMaterialCode\") private var switchPeso: Switch ?= null\r\n    private var buttonCrear: Button?= null; private var buttonEditar: Button ?= null\r\n\r\n    var arregloEjercicios = Array<ejercicio?>(66){null}\r\n    var validadorNombre = true\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_creador_ejercicios)\r\n\r\n        editTextNombre = findViewById<View>(R.id.editTextNombre) as EditText\r\n        switchPeso = findViewById<View>(R.id.switchPeso) as Switch\r\n        buttonCrear = findViewById(R.id.buttonCrear)\r\n        buttonEditar = findViewById(R.id.buttonEditar)\r\n        val spinnerTipos: Spinner = findViewById(R.id.spinnerTipos)\r\n\r\n        val lista0 = listOf(\"Piernas\", \"Abdomen\", \"Pecho\", \"Espalda\", \"Brazos\", \"Hombros\", \"Otro\")\r\n        val adaptador0 = ArrayAdapter(this, android.R.layout.simple_spinner_item, lista0)\r\n        spinnerTipos.adapter = adaptador0\r\n\r\n        buttonCrear!!.setOnClickListener{\r\n            /*val nombre = editTextNombre!!.text.toString(); val tipo = spinnerTipos.selectedItem.toString(); val peso = switchPeso!!.isChecked()\r\n            if(crear(nombre, tipo, peso)){\r\n                if(validadorNombre) {\r\n                    finish()\r\n                }\r\n            }else {\r\n                Toast.makeText(this, \"Se ha alcanzado el numero maximo de ejercicios\", Toast.LENGTH_SHORT).show()\r\n            }\r\n\r\n             */\r\n            crear(\"Lagartijas\", \"Brazos\", false)\r\n        }\r\n\r\n        buttonEditar!!.setOnClickListener{\r\n            //val intent = Intent(this@CreadorEjercicios, VerEjercicios::class.java)\r\n            //startActivity(intent)\r\n            Toast.makeText(this, \"El nuevo ejercicio debera tener id: \"+aux, Toast.LENGTH_SHORT).show()\r\n        }\r\n    }\r\n\r\n    private val db = FirebaseFirestore.getInstance()\r\n    var Nombre2: String? = null\r\n    var ultimoEjercicio = 0\r\n    var aux: String ?= null\r\n\r\n    private fun crear(Nombre: String, Tipo: String, validadorPeso: Boolean) {\r\n\r\n        /*var contador = 0\r\n        MainActivity.user?.let { usuario ->\r\n            db.collection(\"users\").document(usuario).collection(\"ejercicios\").get().addOnSuccessListener {\r\n                 for(ejercicio in it){\r\n                     contador += 1\r\n                 }\r\n            }\r\n        }\r\n        MainActivity.user?.let{ usuario ->\r\n            db.collection(\"users\").document(usuario).collection(\"ejercicios\")\r\n                .document(contador.toString()).get().addOnSuccessListener {\r\n                aux = it.get(\"id\") as String?\r\n            }\r\n        }*/\r\n\r\n\r\n        //escribir\r\n        var id = 6\r\n\r\n        MainActivity.user?.let{ usuario ->\r\n            db.collection(\"users\").document(usuario).collection(\"ejercicios\").document(id.toString()).set(\r\n                hashMapOf(\r\n                    \"id\" to id,\r\n                    \"nombre\" to Nombre,\r\n                    \"tipo\" to Tipo,\r\n                    \"peso\" to validadorPeso\r\n                )\r\n            )\r\n        }\r\n\r\n\r\n        /*//tomar datos\r\n        var id = 2\r\n        MainActivity.user?.let{ usuario ->\r\n            db.collection(\"users\").document(usuario).collection(\"ejercicios\")\r\n                .document(id.toString()).get().addOnSuccessListener {\r\n                    Nombre2 = it.get(\"nombre\") as String?\r\n\r\n                }\r\n        }\r\n        */\r\n\r\n    }\r\n\r\n    /*private fun crear(Nombre: String, Tipo: String, validadorPeso: Boolean): Boolean {\r\n        var contadorMax = 1; var idFinal = 0\r\n\r\n        val helper = LocalDB(this, \"Demo\", null, 1)\r\n        val db: SQLiteDatabase = helper.getReadableDatabase() //Se abre la base de datos\r\n\r\n        val sql = \"select Id, Nombre, Tipo, Peso from Ejercicios\" //Se puede solo con el ID?\r\n        val c = db.rawQuery(sql, null) //Se crea un cursor\r\n        if (c.moveToFirst()) {\r\n            do {\r\n                contadorMax += 1 ////////Toma la cantidad de ejercicios que hayan\r\n                idFinal = c.getInt(0) ///Toma el id del ultimo ejercicio\r\n            } while (c.moveToNext())\r\n        }\r\n        c.close()\r\n        db.close()\r\n\r\n        var confirmacion = false\r\n        if(contadorMax <= 65){//////////////numero mÃ¡x de ejercicios que el usuario puede crear (50)\r\n            var nombre = Nombre; val tipo = Tipo; val peso = validadorPeso\r\n\r\n            if(nombre == \"\")\r\n                nombre = \"Ejercicio\" + (idFinal - 14)\r\n\r\n            val arreglo: Array<String?>\r\n            arreglo = nombre.split(\" \").toTypedArray()\r\n\r\n            validadorNombre = true\r\n            for (i in 0 until arreglo.size) {//recorre todo el nombre\r\n                if(arreglo[i]!!.isDigitsOnly()) { //si uno de los datos es numero\r\n                    Toast.makeText(this, \"El nombre de un ejercicio no puede contener numeros\", Toast.LENGTH_SHORT).show()\r\n                    validadorNombre = false\r\n                }\r\n            }\r\n\r\n            if(validadorNombre == true){\r\n                arregloEjercicios[contadorMax] = ejercicio(idFinal+1, nombre, tipo, peso)\r\n                guardarLocal(arregloEjercicios[contadorMax]!!)\r\n            }\r\n\r\n            confirmacion = true\r\n        }\r\n        return confirmacion\r\n    }\r\n\r\n     */\r\n\r\n    private fun guardarLocal(Ejercicio: ejercicio) {\r\n        val helper = LocalDB(this, \"Demo\", null, 1)\r\n        val db: SQLiteDatabase = helper.getWritableDatabase() //Se abre la base de datos\r\n\r\n        try {\r\n            val c = ContentValues() //Se llena con los valores tomados de las editText\r\n            c.put(\"Id\", Ejercicio.id)\r\n            c.put(\"Nombre\", Ejercicio.nombre)\r\n            c.put(\"Tipo\", Ejercicio.tipo)\r\n            c.put(\"Peso\", Ejercicio.peso)\r\n            db.insert(\"EJERCICIOS\", null, c)\r\n            db.close() //Se cierra la base de datos y se manda mensaje de confirmacion\r\n            Toast.makeText(this, \"Se ha guardado el ejercicio\", Toast.LENGTH_SHORT).show()\r\n        } catch (e: Exception) {\r\n            Toast.makeText(this, \"Ha habido un error\", Toast.LENGTH_SHORT).show()\r\n        }\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/wildtracker/ui/CreadorEjercicios.kt b/app/src/main/java/com/example/wildtracker/ui/CreadorEjercicios.kt
--- a/app/src/main/java/com/example/wildtracker/ui/CreadorEjercicios.kt	(revision e45e3719de41b0634012732194a542aabd5fb7ac)
+++ b/app/src/main/java/com/example/wildtracker/ui/CreadorEjercicios.kt	(date 1651115639615)
@@ -63,23 +63,22 @@
 
     private fun crear(Nombre: String, Tipo: String, validadorPeso: Boolean) {
 
-        /*var contador = 0
+        var contador = 0
         MainActivity.user?.let { usuario ->
             db.collection("users").document(usuario).collection("ejercicios").get().addOnSuccessListener {
                  for(ejercicio in it){
-                     contador += 1
-                 }
-            }
-        }
-        MainActivity.user?.let{ usuario ->
-            db.collection("users").document(usuario).collection("ejercicios")
-                .document(contador.toString()).get().addOnSuccessListener {
-                aux = it.get("id") as String?
-            }
-        }*/
+
+                     if(!ejercicio.equals(5)){
+                         aux = (ejercicio.get("id") as Long).toString()
+                     }
+                     Toast.makeText(this, "Contador: $aux", Toast.LENGTH_SHORT).show()
+
+                 }
+            }
+        }
 
 
-        //escribir
+       /* //escribir
         var id = 6
 
         MainActivity.user?.let{ usuario ->
@@ -93,7 +92,7 @@
             )
         }
 
-
+*/
         /*//tomar datos
         var id = 2
         MainActivity.user?.let{ usuario ->
